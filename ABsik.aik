Add		:= 0:4 1:3
Lt		:= 0:4 2:3
Sub		:= 0:4 3:3


And		:= 1:4 1:3
Or		:= 1:4 2:3
Xor		:= 1:4 3:3

Get .i12	:= 7:4 .i12:12

Dup		:= 8:4 1:3
Ret		:= 8:4 3:3
Sys		:= 8:4 5:3



Pop .i12	:= 9:4 .i12:12
Put .i12	:= 10:4 .i12:12
Load		:= 11:4 
Store		:= 12:4 
Test		:= 13:4

Call .i16 ?((.&0xf000)==(.i16&0xf000))	:= 2:4 .i16:12
Call .i16	:= 15:4 0:8 (.i16>>12):4 2:4 .i16:12

JumpF .i16 ?((.&0xf000)==(.i16&0xf000))	:= 3:4 .i16:12
JumpF .i16	:= 15:4 0:8 (.i16>>12):4 3:4 .i16:12


Jump .i16 ?((.&0xf000)==(.i16&0xf000))	:= 4:4 .i16:12
Jump .i16	:= 15:4 0:8 (.i16>>12):4 4:4 .i16:12


JumpT .i16 ?((.&0xf000)==(.i16&0xf000))	:= 5:4 .i16:12
JumpT .i16	:= 15:4 0:8 (.i16>>12):4 5:4 .i16:12

Pre .i16	:= 15:4 0:8 (.i16>>12):4


Push .i16 ?(((.i16&0xf800)==0xf800)||((.i16&0xf800)==0))	:= 6:4 .i16:12
Push .i16	:= 15:4 0:8 (.i16>>12):4 6:4 .i16:12

.segment .text 16 0x10000 0 .VMEM
.segment .data 16 0x10000 0x0000 .VMEM
.const 0 .lowfirst ; was wrong endian
